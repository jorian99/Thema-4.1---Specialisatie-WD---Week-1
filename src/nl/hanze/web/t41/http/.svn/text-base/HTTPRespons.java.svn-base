package nl.hanze.web.t41.http;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;

public class HTTPRespons {
	private OutputStream out;
	private HTTPRequest request;

	public HTTPRespons(OutputStream out) {
		this.out = out;
	}

	public void setRequest(HTTPRequest request) {
		this.request = request;
	}

	public void sendResponse() throws IOException {
		byte[] bytes = new byte[HTTPSettings.BUFFER_SIZE];
		FileInputStream fis = null;
		String fileName = request.getUri();

		try {
			File file = new File(HTTPSettings.DOC_ROOT, fileName);

			if (file.exists()) {
				fis = new FileInputStream(file);
				out.write(getHTTPHeader(fileName));

			} else {
				fis = new FileInputStream(HTTPSettings.FILE_NOT_FOUND);
				out.write(getHTTPHeader(""));
			}

			// schrijven van de data
			int ch = fis.read(bytes, 0, HTTPSettings.BUFFER_SIZE);
			while (ch != -1) {
				out.write(bytes, 0, ch);
				ch = fis.read(bytes, 0, HTTPSettings.BUFFER_SIZE);
			}

		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (fis != null)
				fis.close();
		}

	}

	private byte[] getHTTPHeader(String fileName) {
		String fileType = getFileType(fileName);
		String ext = HTTPSettings.dataTypes.get(fileType);
		long length = new File(HTTPSettings.DOC_ROOT + fileName).length();
		String header = "";

		// beter strategy-pattern gebruiken hier
		if (fileName.equals(""))
			header = "HTTP/1.1 404 Not Found\r\n";
		else
			header = "HTTP/1.1 200 OK\r\n";

		header += "Date: " + HTTPSettings.getDate()
				+ "Server: Barts eigen server\r\n" + "Content-type: " + ext + "\r\n"
			    + "Content-Length: " + length + "\r\n"
				+ "Connection: close\r\n" + "\r\n";

		byte[] rv = header.getBytes();
		return rv;
	}

	private String getFileType(String fileName) {
		int i = fileName.lastIndexOf(".");
		String ext = "";
		if (i > 0 && i < fileName.length() - 1) {
			ext = fileName.substring(i + 1);
		}

		return ext;
	}

	private void showResponse(byte[] respons) {
		StringBuffer buf = new StringBuffer(HTTPSettings.BUFFER_SIZE);

		for (int i = 0; i < respons.length; i++) {
			buf.append((char) respons[i]);
		}
		System.out.print(buf.toString());

	}

}
